
target:
  type: teradata
  server: "{{ env_var('DBT_TERADATA_SERVER_NAME', 'localhost') }}"
  username: "{{ env_var('DBT_TERADATA_USERNAME', 'dbc') }}"
  password: "{{ env_var('DBT_TERADATA_PASSWORD', 'dbc') }}"
  schema: "dbt_test_{{ var('_dbt_random_suffix') }}"
  tmode: ANSI
  log: "0"

projects:
  - name: validate_teradata_cases
    paths:
      models/table_with_cte.sql: |
        {{
            config(
                materialized='table'
            )
        }}
        WITH
        source_a as (
            select 1 as a1, 2 as a2
        ),
        source_b as (
            select 1 as b1, 2 as b2
        )
        SELECT * FROM source_a, source_b

      models/table_without_cte.sql: |
        {{
            config(
                materialized='table'
            )
        }}
        SELECT  1 as a1, 2 as a2, 1 as b1, 2 as b2

      models/view_with_cte.sql: |
        {{
            config(
                materialized='view'
            )
        }}
        WITH
        source_a as (
            select 1 as a1, 2 as a2
        ),
        source_b as (
            select 1 as b1, 2 as b2
        )
        SELECT * FROM source_a, source_b

      models/view_without_cte.sql: |
        {{
            config(
                materialized='view'
            )
        }}
        WITH
        source_a as (
            select 1 as a1, 2 as a2
        ),
        source_b as (
            select 1 as b1, 2 as b2
        )
        SELECT * FROM source_a, source_b

      models/table_with_cte_comments.sql: |
              {{
                  config(
                      materialized='table'
                  )
              }}
              -- This is a test comment
              WITH
              source_a as (
                  select 1 as a1, 2 as a2
              ),
              source_b as (
                  select 1 as b1, 2 as b2
              )
              SELECT * FROM source_a, source_b

      models/schema.yaml: |
        version: 2
        models:
          - name: table_with_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: table_without_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: view_with_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
          - name: view_without_cte
            columns:
            - name: a1
              tests:
                - not_null
            - name: a2
              tests:
                - not_null
            - name: b1
              tests:
                - not_null
            - name: b2
              tests:
                - not_null
    facts:
      run:
        length: 5
        names:
            - table_with_cte
            - table_without_cte
            - view_with_cte
            - view_without_cte
            - table_with_cte_comments
      persisted_relations:
          - table_with_cte
          - table_without_cte
          - view_with_cte
          - view_without_cte
          - table_with_cte_comments
      table_with_cte:
          rowcount: 1
      table_without_cte:
          rowcount: 1
      view_with_cte:
          rowcount: 1
      view_without_cte:
          rowcount: 1
      expected_types_view:
          table_with_cte: table
          table_without_cte: table
          view_with_cte: view
          view_without_cte: view
          table_with_cte_comments: table
      expected_types_table:
          table_with_cte: table
          table_without_cte: table
          view_with_cte: view
          view_without_cte: view
          table_with_cte_comments: table
      catalog:
          nodes:
              length: 5
          sources:
              length: 0
  - name: validate_teradata_fastload
    paths:
      data/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

    dbt_project_yml:
      seeds:
        +use_fastload: true
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4

    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
  - name: validate_teradata_sources
    paths:
      data/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

      models/table_from_source.sql: |
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/sources.yml: |
        version: 2
        sources:
          - name: alias_source_schema
            schema: "{{ target.schema }}"
            tables:
              - name: alias_source_table
                identifier: test_table
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
  - name: validate_teradata_catalog
    paths:
      data/test_table.csv: |
        id,attrA,attrB
        1,val1A,val1B
        2,val2A,val2B
        3,val3A,val3B
        4,val4A,val4B

      models/table_from_source.sql: |
        {{
            config(
                materialized='table'
            )
        }}
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/view_from_source.sql: |
        {{
            config(
                materialized='view'
            )
        }}
        SELECT * FROM {{ source('alias_source_schema', 'alias_source_table') }}

      models/sources.yml: |
        version: 2
        sources:
          - name: alias_source_schema
            schema: "{{ target.schema }}"
            tables:
              - name: alias_source_table
                identifier: test_table
    facts:
      run:
        length: 1
      test_table:
        rowcount: 4
      table_from_source:
        rowcount: 4
      catalog:
        nodes:
          length: 3
          names:
            - test_table
            - table_from_source
            - view_from_source
        sources:
          length: 1
          names:
            - test_table
  - name: validate_teradata_create_table
    paths:
      data/test_table_in_create_test.csv: |
        id,attrA,attrB,create_date
        1,val1A,val1B,2020-03-05
        2,val2A,val2B,2020-04-05
        3,val3A,val3B,2020-05-05
        4,val4A,val4B,2020-10-05

      models/table_with_cte.sql: |
        {{
            config(
                materialized='table'
            )
        }}
        WITH
        source_a as (
            select 1 as id, 'val1A' as attrA, 'val1B' as attrB
        ),
        source_b as (
            select TO_DATE('2020-03-05') as create_date
        )
        SELECT * FROM source_a, source_b

      models/table_no_config.sql: |
        {{
            config(
                materialized='table'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}


      models/table_with_table_kind.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_kind.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_table_option.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_option.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_table_kind_and_table_option.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_table_kind_and_table_option.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_many_table_options.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_many_table_options.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_statistics.sql: |
        {{
            config(
                materialized='table',
                with_statistics='true'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_statistics.sql: |
        {{
            config(
                materialized='table',
                with_statistics='true'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_options_and_statistics.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL',
                with_statistics='true'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_options_and_statistics.sql: |
        {{
            config(
                materialized='table',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON,
                  NO MERGEBLOCKRATIO,
                  WITH CONCURRENT ISOLATED LOADING FOR ALL',
                with_statistics='true'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_index.sql: |
        {{
            config(
                materialized='table',
                index='PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE \'2020-01-01\'
                              AND     DATE \'2021-01-01\'
                              EACH INTERVAL \'1\' MONTH)'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_index.sql: |
        {{
            config(
                materialized='table',
                index='PRIMARY INDEX(id)
                PARTITION BY RANGE_N(create_date
                              BETWEEN DATE \'2020-01-01\'
                              AND     DATE \'2021-01-01\'
                              EACH INTERVAL \'1\' MONTH)'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_larger_index.sql: |
        {{
            config(
                materialized='table',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_larger_index.sql: |
        {{
            config(
                materialized='table',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_kind_options_index.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_kind_options_index.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

      models/table_with_kind_options_stats_index.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON',
                with_statistics='true',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('test_table_in_create_test') }}

      models/from_cte_table_with_kind_options_stats_index.sql: |
        {{
            config(
                materialized='table',
                table_kind='multiset',
                table_option='NO FALLBACK, NO JOURNAL, CHECKSUM = ON',
                with_statistics='true',
                index='PRIMARY INDEX(id)
                      PARTITION BY RANGE_N(create_date
                          BETWEEN DATE \'2020-01-01\'
                          AND     DATE \'2021-01-01\'
                          EACH INTERVAL \'1\' MONTH)
                      INDEX index_attrA (attrA) WITH LOAD IDENTITY'
            )
        }}
        SELECT * FROM {{ ref('table_with_cte') }}

    facts:
      run:
        length: 22
sequences:

  # List of sequences:
  # https://github.com/fishtown-analytics/dbt-adapter-tests/tree/master/pytest_dbt_adapter/sequences

  # PASS
  test_dbt_empty: empty
  test_dbt_base: base
  test_dbt_data_test: data_test
  test_dbt_schema_test: schema_test
  test_dbt_incremental: incremental
  test_dbt_ephemeral: ephemeral
  test_dbt_snapshot_strategy_timestamp: snapshot_strategy_timestamp
  test_dbt_snapshot_strategy_check_cols: snapshot_strategy_check_cols
  test_dbt_teradata:
    project: validate_teradata_cases
    sequence:
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_types
        expect: fact.expected_types_table
      - type: relation_rows
        name: table_with_cte
        length: fact.table_with_cte.rowcount
      - type: relation_rows
        name: table_without_cte
        length: fact.table_without_cte.rowcount
      - type: relation_rows
        name: view_with_cte
        length: fact.view_with_cte.rowcount
      - type: relation_rows
        name: view_without_cte
        length: fact.view_without_cte.rowcount
      - type: relations_equal
        relations: fact.persisted_relations
      - type: dbt
        cmd: docs generate
      - type: catalog
        exists: True
        nodes:
          length: fact.catalog.nodes.length
        sources:
          length: fact.catalog.sources.length
  test_dbt_teradata_fastload:
    project: validate_teradata_fastload
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: test_table
        length: fact.test_table.rowcount
  test_dbt_teradata_sources:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: test_table
        length: fact.test_table.rowcount
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length
      - type: relation_rows
        name: table_from_source
        length: fact.table_from_source.rowcount
  test_dbt_teradata_docs_with_sources:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: docs generate
      - type: run_results
        exists: True
  test_dbt_teradata_catalog:
    project: validate_teradata_catalog
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: dbt
        cmd: docs generate
      - type: run_results
        exists: True
      - type: catalog
        exists: True
        nodes:
          length: fact.catalog.nodes.length
          names: fact.catalog.nodes.names
        sources:
          length: fact.catalog.sources.length
          names: fact.catalog.sources.names
  test_dbt_teradata_seed_twice:
    project: validate_teradata_sources
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
  test_dbt_teradata_create_table:
    project: validate_teradata_create_table
    sequence:
      - type: dbt
        cmd: seed
      - type: run_results
        exists: True
      - type: dbt
        cmd: run
      - type: run_results
        exists: True
      - type: run_results
        length: fact.run.length

  # FAIL
  # test_dbt_ephemeral_data_tests: data_test_ephemeral_models - fails with
  #   [Error 6926] WITH [RECURSIVE] clause or recursive view is not supported
  #   within WITH [RECURSIVE] definitions, views, triggers or stored procedures.
